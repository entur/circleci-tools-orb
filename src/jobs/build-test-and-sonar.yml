description: |
  Run a test command, save the tests results, and analyze with SonarCloud.
  Gradle build and save the created artifact to the build_path parameter location.
executor: << parameters.executor >>
parallelism: << parameters.parallelism >>
parameters:
  executor:
    description: The name of custom executor to use
    type: executor
    default: jdk
  parallelism:
    default: 1
    type: integer
    description: "Number of Circle machines to use for load balancing, min 1"
  cache_key:
    description: Gradle cache key to increase build times of subsequent runs
    type: string
    default: v1
  test_command:
    type: string
    default: ./gradlew test
    description: "The (gradle) command to run the tests"
  build_path:
    description: The path to the build directory that will hold the generated .jar file to be packaged into a docker image
    type: string
    default: build/libs/
  stored_tests_path:
    type: string
    default: ./build/test-results/test/
    description: "The path to the test results to be saved and visualized by Circle Ci in the pipeline 'Test' tab"

steps:
  - checkout
  - attach_workspace:
      at: .
  - gradle/with_cache:
      cache_key: << parameters.cache_key >>
      steps:
        - run:
            name: Gradle test
            command: << parameters.test_command >>
        - store_test_results:
            path: << parameters.stored_tests_path >>
            destination: test
        - sonar
        - gradle-build:
            build_path: << parameters.build_path >>
  - persist_to_workspace:
      root: .
      paths:
        - << parameters.build_path >>
