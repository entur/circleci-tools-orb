description: |
  Run gradlew build, which builds the code, runs the tests and creates a release .jar file that we can persist to the workspace and package into a docker image in subsequent steps/jobs.
  Also publishes an artifact to the project configured artifactory.
executor: << parameters.executor >>
parameters:
  executor:
    description: The name of custom executor to use
    type: executor
    default: jdk
  cache_key:
    description: Gradle cache key to increase build times of subsequent runs
    type: string
    default: v1
  build-path:
    description: The path to the build directory that will hold the generated .jar file to be packaged into a docker image
    type: string
    default: build/libs/
  artifact-version:
    description: The version of the artifact to publish to artifactory, only in use if use-entur-version is false
    type: string
    default: "1.0.0"
  use-entur-version:
    description: Use the Entur-version schema for the artifact version
    type: boolean
    default: false
  publish-snapshot:
    description: Publish a snapshot version of the artifact to artifactory
    type: boolean
    default: true
  publish-task-name:
    description: The name of the gradle task to run to publish the artifact to artifactory
    type: string
    default: "publish"
steps:
  - checkout
  - when:
      condition: << parameters.use-entur-version >>
      steps:
        - shorten-branch-name
        - create-entur-tag
        - run:
            name: Set artifact-version to Entur-version
            command: |
              echo "Using created tag: $TAG to set version"
              if [ << parameters.publish-snapshot >> = true ]; then
                VERSION=$(echo "$TAG"-SNAPSHOT)
                echo "export VERSION=\"${VERSION}\"" >> $BASH_ENV
              else
                VERSION=$(echo "$TAG")
                echo "export VERSION=\"${VERSION}\"" >> $BASH_ENV
              fi
              echo "$VERSION is exported to BASH_ENV"
  - unless:
      condition: << parameters.use-entur-version >>
      steps:
        - run:
            name: Set artifact-version to parameter
            command: |
              if [ << parameters.publish-snapshot >> = true ]; then
                VERSION=$(echo << parameters.artifact-version >>-SNAPSHOT)
                echo "export VERSION=\"${VERSION}\"" >> $BASH_ENV
              else
                VERSION=$(echo << parameters.artifact-version >>)
                echo "export VERSION=\"${VERSION}\"" >> $BASH_ENV
              fi
              echo "$VERSION is exported to BASH_ENV"
  - gradle/with_cache:
      cache_key: << parameters.cache_key >>
      steps:
        - run:
            name: Build
            command: ./gradlew build
        - publish-maven-artifact:
            publish-task-name: << parameters.publish-task-name >>
  - persist_to_workspace:
      root: .
      paths:
        - << parameters.build-path >>
